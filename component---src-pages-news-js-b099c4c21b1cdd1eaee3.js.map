{"version":3,"sources":["webpack:///./src/pages/news.js"],"names":["__webpack_require__","r","__webpack_exports__","d","newsQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_news_module_css__WEBPACK_IMPORTED_MODULE_2__","_news_module_css__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","News","_ref","data","blogs","media","a","createElement","className","styles","newsContainer","newsSection","newsTitle","blueText","cardGrid","nodes","map","blog","card","to","frontmatter","path","title","blurb","singleMedia","href"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAAO,EAAAE,GAAAE,EAAAX,EAAA,KAoDeY,UA7CF,SAAAC,GAEP,IADJC,EACID,EADJC,KAGQC,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MACf,OACEV,EAAAW,EAAAC,cAACV,EAAA,EAAD,KACEF,EAAAW,EAAAC,cAAA,WAASC,UAAWC,IAAOC,eACzBf,EAAAW,EAAAC,cAAA,WAASC,UAAWC,IAAOE,aACzBhB,EAAAW,EAAAC,cAAA,MAAIC,UAAWC,IAAOG,WAAtB,UAAwCjB,EAAAW,EAAAC,cAAA,QAAMC,UAAWC,IAAOI,UAAxB,UACxClB,EAAAW,EAAAC,cAAA,OAAKC,UAAWC,IAAOK,UACpBV,EAAMW,MAAMC,IAAI,SAAAC,GAAI,OACnBtB,EAAAW,EAAAC,cAAA,WAASC,UAAWC,IAAOS,MACzBvB,EAAAW,EAAAC,cAACP,EAAA,EAAD,CAAMmB,GAAIF,EAAKG,YAAYC,MACzB1B,EAAAW,EAAAC,cAAA,UAAKU,EAAKG,YAAYE,OACtB3B,EAAAW,EAAAC,cAAA,SAAIU,EAAKG,YAAYG,WAI3B5B,EAAAW,EAAAC,cAAA,WAASC,UAAWC,IAAOS,MACzBvB,EAAAW,EAAAC,cAACP,EAAA,EAAD,CAAMmB,GAAG,UACPxB,EAAAW,EAAAC,cAAA,wBACAZ,EAAAW,EAAAC,cAAA,qDAKRZ,EAAAW,EAAAC,cAAA,WAASC,UAAWC,IAAOE,aACzBhB,EAAAW,EAAAC,cAAA,MAAIC,UAAWC,IAAOG,WAAtB,UAAwCjB,EAAAW,EAAAC,cAAA,QAAMC,UAAWC,IAAOI,UAAxB,UACxClB,EAAAW,EAAAC,cAAA,OAAKC,UAAWC,IAAOK,UACpBT,EAAMU,MAAMC,IAAI,SAAAQ,GAAW,OAC1B7B,EAAAW,EAAAC,cAAA,WAASC,UAAWC,IAAOS,MACzBvB,EAAAW,EAAAC,cAAA,KAAGkB,KAAMD,EAAYJ,YAAYC,MAC/B1B,EAAAW,EAAAC,cAAA,UAAKiB,EAAYJ,YAAYE,OAC7B3B,EAAAW,EAAAC,cAAA,SAAIiB,EAAYJ,YAAYG,gBAavC,IAAM9B,EAAS","file":"component---src-pages-news-js-b099c4c21b1cdd1eaee3.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\n\nimport styles from \"./news.module.css\"\n\nimport { graphql, Link } from \"gatsby\"\n\nconst News = ({\n  data,\n}) => {\n\n  const { blogs, media } = data;\n  return (\n    <Layout>\n      <section className={styles.newsContainer}>\n        <section className={styles.newsSection}>\n          <h2 className={styles.newsTitle}>Kitura <span className={styles.blueText}>Blogs</span></h2>\n          <div className={styles.cardGrid}>\n            {blogs.nodes.map(blog => (\n              <article className={styles.card}>\n                <Link to={blog.frontmatter.path}> \n                  <h3>{blog.frontmatter.title}</h3>\n                  <p>{blog.frontmatter.blurb}</p>\n                </Link>\n              </article>\n            ))}\n            <article className={styles.card}>\n              <Link to=\"/blogs\">\n                <h3>Want more?</h3>\n                <p>View our entire collection of blogs.</p>\n              </Link>\n            </article>\n          </div>\n        </section>\n        <section className={styles.newsSection}>\n          <h2 className={styles.newsTitle}>Kitura <span className={styles.blueText}>Media</span></h2>\n          <div className={styles.cardGrid}>\n            {media.nodes.map(singleMedia => (\n              <article className={styles.card}>\n                <a href={singleMedia.frontmatter.path}>\n                  <h3>{singleMedia.frontmatter.title}</h3>\n                  <p>{singleMedia.frontmatter.blurb}</p>\n                </a>\n              </article>\n            ))}\n          </div>\n        </section>\n      </section>\n    </Layout>\n  )\n}\n\nexport default News\n\nexport const newsQuery = graphql`\n    {\n        blogs: allMarkdownRemark(\n            filter: {fileAbsolutePath: {regex: \"//web/news/blogs//\"}}\n            sort: {\n              fields: [frontmatter___date]\n              order: DESC\n            }\n            limit: 3\n          ) {\n            nodes {\n              html\n              frontmatter {\n                title\n                blurb\n                path\n              }\n            }\n          },\n        media: allMarkdownRemark(\n            filter: {fileAbsolutePath: {regex: \"//web/news/media//\"}}\n            sort: {\n                fields: [frontmatter___date]\n                order: DESC\n            }\n            limit: 4\n        ) {\n            nodes {\n                frontmatter {\n                    title\n                    blurb\n                    path\n                }\n            }\n        }\n    }\n`"],"sourceRoot":""}