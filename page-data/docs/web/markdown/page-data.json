{"componentChunkName":"component---src-templates-docs-js","path":"/docs/web/markdown","webpackCompilationHash":"ce65eca4090760710b8f","result":{"data":{"docs":{"html":"<h1 id=\"kitura-markdown\"><a href=\"#kitura-markdown\" aria-label=\"kitura markdown permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kitura Markdown</h1>\n<p>In this guide, we will show you how to serve a web page generated from Markdown templates (.md files) using Kitura-Markdown.</p>\n<hr>\n<h2 id=\"step-1-add-kituramarkdown-to-project\"><a href=\"#step-1-add-kituramarkdown-to-project\" aria-label=\"step 1 add kituramarkdown to project permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 1: Add KituraMarkdown to Project</h2>\n<p>To use Markdown from a server, we first need to add Kitura-Markdown to our dependencies.</p>\n<blockquote>\n<p>If you don't have a server, follow our Create a server guide.</p>\n</blockquote>\n<p>Next, we need to import the KituraMarkdown package.</p>\n<p>Open your Application.swift file:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">open Sources/Application/Application.swift</code></pre></div>\n<p>Then at the top of the file add the import statement for KituraMarkdown:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token builtin\">KituraMarkdown</span></code></pre></div>\n<p>Now we can register the KituraMarkdown Template Engine to our router instance.</p>\n<p>Inside the postInit() function add:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">router<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>templateEngine<span class=\"token punctuation\">:</span> <span class=\"token function\">KituraMarkdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>Kitura supports multiple template engines being registered to a single instance of a router. By default each templating engine will handle files in the ./Views directory that match the file extension it supports.</p>\n</blockquote>\n<hr>\n<h2 id=\"step-2-configure-kituramarkdown\"><a href=\"#step-2-configure-kituramarkdown\" aria-label=\"step 2 configure kituramarkdown permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 2: Configure KituraMarkdown</h2>\n<p>We may wish to provide a custom configuration for these properties, for example, to configure the contents of the <head> tag.</p>\n<p>To provide this configuration we can provide a HTML wrapper template for our rendered Markdown using MarkdownOptions.</p>\n<p>Inside the postInit() function add:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> markdownOptions <span class=\"token operator\">=</span> <span class=\"token function\">MarkdownOptions</span><span class=\"token punctuation\">(</span>pageTemplate<span class=\"token punctuation\">:</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>We have selected the default template which provides the following HTML wrapper:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n   &lt;html lang=\\\"en\\\">\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n       &lt;meta charset=\\\"UTF-8\\\">\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n         <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>snippetInsertLocation</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>snippetInsertLocation</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Alternatively you can provide your own template using MarkdownOptions:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">let markdownOptions = MarkdownOptions(pageTemplate: \"\"\"\n <span class=\"token doctype\">&lt;!DOCTYPE html></span>\n &lt;html lang=\\\"en\\\">\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n         &lt;meta charset=\\\"UTF-8\\\">\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n         <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n             <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>My Page Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n         <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n         <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n             <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>snippetInsertLocation</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>snippetInsertLocation</span><span class=\"token punctuation\">></span></span>\n         <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n \"\"\")</code></pre></div>\n</blockquote>\n<p>During the rendering of the Markdown file, our rendered Markdown content replaces the <snippetInsertLocation></snippetInsertLocation> tag.</p>\n<hr>\n<h2 id=\"step-3-create-the-template-file\"><a href=\"#step-3-create-the-template-file\" aria-label=\"step 3 create the template file permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 3: Create the template file</h2>\n<p>By default, Kitura looks for template files in a ./Views directory found at the root of the project.</p>\n<blockquote>\n<p>Typically the root of your project is where the .xcodeproj directory is.</p>\n</blockquote>\n<p>Once we are in the root of our project we can create the directory:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir Views</code></pre></div>\n<p>Then we need to create our template file within the Views directory:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd Views &amp;&amp; touch book.md</code></pre></div>\n<p>Now we have everything we need to start creating our templates.</p>\n<blockquote>\n<p>If you are using Xcode and used the command line to create your Views directory you will need to regenerate your Xcode project:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">swift package generate-xcodeproj</code></pre></div>\n<p>This is to enable Xcode to detect the new directory.</p>\n</blockquote>\n<p>Now we can add some Markdown to render:</p>\n<p>So in the book.md file add:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Books Header\n\nDescription with **bold** text\n\n* Book1\n* Book2</code></pre></div>\n<hr>\n<h2 id=\"step-4-render-the-markdown\"><a href=\"#step-4-render-the-markdown\" aria-label=\"step 4 render the markdown permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 4: Render the Markdown</h2>\n<p>We've added the KituraMarkdown template engine to our router, so now we can use it in a route.</p>\n<p>Just below our other registered routes we can create a new route for KituraMarkdown:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">router<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/book\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">,</span> next <span class=\"token keyword\">in</span>\n    <span class=\"token keyword\">try</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"book.md\"</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">:</span> markdownOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>You will notice a context parameter is required, however as Markdown files provide all the context this value is ignored, so we simply pass in an empty context.</p>\n</blockquote>\n<p>The response.render() method attempts to populate the template file with the provided data.</p>\n<p>So in our case KituraMarkdown will take the book.md file and render the Markdown in it to be viewed in a browser.</p>\n<p>Now to test our templating we first need to start the Kitura server.</p>\n<p>Then in a brower we can open:</p>\n<p><a href=\"http://localhost:8080/book\">http://localhost:8080/book</a></p>\n<p>In the browser we should see:</p>\n<h1 id=\"books-header\"><a href=\"#books-header\" aria-label=\"books header permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Books Header</h1>\n<p>Description with <strong>bold</strong> text</p>\n<ul>\n<li>Book1</li>\n<li>Book2</li>\n</ul>\n<p>That's it! We've successfully rendered some Markdown into a browser using KituraMarkdown.</p>","frontmatter":{"path":"/docs/web/markdown","title":"Kitura Markdown"}},"docsList":{"nodes":[{"title":"Getting Started","items":[{"title":"Installation","link":"/docs/getting-started/installation"},{"title":"Hello World","link":"/docs/getting-started/hello-world"},{"title":"Create a Server","link":"/docs/getting-started/create-server"}]},{"title":"Logging","items":[{"title":"What is Logging?","link":"/docs/logging/what-is-logging"},{"title":"HeliumLogger","link":"/docs/logging/helium-logger"}]},{"title":"Routing","items":[{"title":"What is Routing?","link":"/docs/routing/what-is-routing"},{"title":"Codable Routing","link":"/docs/routing/codable-routing"},{"title":"OpenAPI","link":"/docs/routing/kitura-openapi"},{"title":"Raw Routing","link":"/docs/routing/raw-routing"}]},{"title":"Databases","items":[{"title":"What are Databases?","link":"/docs/databases/what-are-databases"},{"title":"SQL - ORM","link":"/docs/databases/orm"},{"title":"SQL - Kuery","link":"/docs/databases/kuery"},{"title":"NoSQL - CouchDB","link":"/docs/databases/couchdb"}]},{"title":"Sessions","items":[{"title":"What are Sessions?","link":"/docs/sessions/what-are-sessions"},{"title":"Codable Routing Session","link":"/docs/sessions/codable-session"},{"title":"Raw Routing Session","link":"/docs/sessions/raw-session"}]},{"title":"Authentication","items":[{"title":"What is Authentication?","link":"/docs/authentication/what-is-authentication"},{"title":"Basic Authentication","link":"/docs/authentication/basic-authentication"},{"title":"JSON Web Tokens","link":"/docs/authentication/jwt"},{"title":"OAuth 2.0 with Facebook/Google","link":"/docs/authentication/oauth2"}]},{"title":"Web Applications","items":[{"title":"What is Templating?","link":"/docs/web/what-is-templating"},{"title":"Static File Server","link":"/docs/web/static-file-server"},{"title":"Stencil","link":"/docs/web/stencil"},{"title":"Markdown","link":"/docs/web/markdown"}]},{"title":"Deploying","items":[{"title":"Monitoring","link":"/docs/deploying/monitoring"},{"title":"Enabling SSL/TLS","link":"/docs/deploying/enabling-ssl"},{"title":"Docker","link":"/docs/deploying/docker"},{"title":"Kubernetes","link":"/docs/deploying/kubernetes"},{"title":"Cloud Foundry","link":"/docs/deploying/cloud-foundry"}]}]}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}