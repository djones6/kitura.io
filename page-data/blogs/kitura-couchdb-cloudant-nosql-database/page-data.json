{"componentChunkName":"component---src-templates-blogs-js","path":"/blogs/kitura-couchdb-cloudant-nosql-database","webpackCompilationHash":"a23aaa782308d970cae7","result":{"data":{"blog":{"html":"<p>Kitura CouchDB is a pure Swift client, that allows applications to interact with a CouchDB or Cloudant NoSQL database. We have just released Kitura-CouchDB 3.0, featuring a new Codable API, which removes the JSON boilerplate and works directly with your Swift objects. This blog will describe the new API and demonstrate its benefits, using an example.</p>\n<h2 id=\"codable-kitura-couchdb\"><a href=\"#codable-kitura-couchdb\" aria-label=\"codable kitura couchdb permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Codable Kitura CouchDB</h2>\n<p>Previously, in Kitura CouchDB 2.0, you would interact with the database using SwiftyJSON. This involved a lot of boilerplate code to convert your Swift object to a SwiftyJSON object and vice versa. The introduction of Codable, simplifies the conversion from Swift to JSON and Kitura CouchDB 3.0 utilizes this new functionality in its new API. To demonstrate how this improves usability, we will apply these changes to our CouchDBSample.</p>\n<p>The following examples compare the code required for executing CRUD (create, retrieve, update, delete) operations on a Swift object using Kitura-CouchDB versions 2.0 and 3.0. It assumes you have installed CouchDB and imported Kitura-CouchDB as a dependency in your Swift project.</p>\n<h3 id=\"couchdb-document\"><a href=\"#couchdb-document\" aria-label=\"couchdb document permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CouchDB Document</h3>\n<p>CouchDB is a NoSQL database for storing documents. A document is any structure that can be represented as JSON and contains _id and _rev fields.</p>\n<ul>\n<li>The _id field is the unique identifier for the document. If it is not set, a random UUID will be assigned for the document.</li>\n<li>The _rev field is the revision of the document. It is returned when you make requests and is used to prevent conflicts from multiple users updating the same document.</li>\n</ul>\n<p>Kitura CouchDB 3.0 introduces a new Document protocol that encapsulates the requirements of a CouchDB document:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">protocol</span> <span class=\"token builtin\">Document</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Codable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> _id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> _rev<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In our example, we define a struct that represents the documents we want to store in our database:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token builtin\">MyDocument</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Document</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> _id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token operator\">?</span>\n    <span class=\"token keyword\">var</span> _rev<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token operator\">?</span>\n    <span class=\"token keyword\">var</span> value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We have made this struct conform to Document so it can be used with the new API.</p>\n<h3 id=\"connect-to-the-database-with-couchdbclient\"><a href=\"#connect-to-the-database-with-couchdbclient\" aria-label=\"connect to the database with couchdbclient permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Connect to the database with CouchDBClient</h3>\n<p>The CouchDBClient represents a connection to a CouchDB server. It is initialized from a ConnectionProperties struct:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> properties <span class=\"token operator\">=</span> <span class=\"token function\">ConnectionProperties</span><span class=\"token punctuation\">(</span>\n    host<span class=\"token punctuation\">:</span> <span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span>              <span class=\"token comment\">// http address</span>\n    port<span class=\"token punctuation\">:</span> <span class=\"token number\">5984</span><span class=\"token punctuation\">,</span>                     <span class=\"token comment\">// http port</span>\n    secured<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>                 <span class=\"token comment\">// https or http</span>\n    username<span class=\"token punctuation\">:</span> <span class=\"token string\">\"&lt;CouchDB-username>\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// admin username</span>\n    password<span class=\"token punctuation\">:</span> <span class=\"token string\">\"&lt;CouchDB-password>\"</span>  <span class=\"token comment\">// admin password</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> couchDBClient <span class=\"token operator\">=</span> <span class=\"token function\">CouchDBClient</span><span class=\"token punctuation\">(</span>connectionProperties<span class=\"token punctuation\">:</span> properties<span class=\"token punctuation\">)</span></code></pre></div>\n<p>The couchDBClient can then be used to create, retrieve and delete CouchDB databases. For our example we retrieve an existing CouchDB database:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// Kitura CouchDB 2.0</span>\ncouchDBClient<span class=\"token punctuation\">.</span><span class=\"token function\">dbExists</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SampleDB\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>exists<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n    <span class=\"token keyword\">if</span> exists <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> database <span class=\"token operator\">=</span> couchDBClient<span class=\"token punctuation\">.</span><span class=\"token function\">database</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SampleDB\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// Use database</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n \n<span class=\"token comment\">// Kitura CouchDB 3.0</span>\ncouchDBClient<span class=\"token punctuation\">.</span><span class=\"token function\">retrieveDB</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SampleDB\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>database<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> database <span class=\"token operator\">=</span> database <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Use database</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In Kitura CouchDB 3.0, dbExists has been replaced with retrieveDB. This will check the database exists and, if it does, initialize a database instance for you in a single function.</p>\n<h3 id=\"database-crud-operations\"><a href=\"#database-crud-operations\" aria-label=\"database crud operations permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Database CRUD operations</h3>\n<p>Your database instance is used to perform asynchronous HTTP requests with your documents. In our example, the requests are nested within the previous requests callback to ensure they execute in the desired order.</p>\n<p>We will be using the following document:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> myDocument <span class=\"token operator\">=</span> <span class=\"token function\">MyDocument</span><span class=\"token punctuation\">(</span>_id<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Kitura\"</span><span class=\"token punctuation\">,</span> _rev<span class=\"token punctuation\">:</span> <span class=\"token constant\">nil</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"create-a-document\"><a href=\"#create-a-document\" aria-label=\"create a document permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create a Document</h4>\n<p>In Kitura CouchDB 2.0 we have to convert our object using SwiftyJSON, however in Kitura CouchDB 3.0, because we marked the object as a Document, it can be created directly:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// Kitura CouchDB 2.0</span>\n<span class=\"token keyword\">let</span> jsonDict <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"_id\"</span><span class=\"token punctuation\">:</span> myDocument<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> myDocument<span class=\"token punctuation\">.</span>value\n<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">let</span> json <span class=\"token operator\">=</span> <span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>jsonDict<span class=\"token punctuation\">)</span>\ndatabase<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> rev<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> id <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Created document with id <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>id<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// Retrieve document here</span>\n    <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span>\n \n<span class=\"token comment\">// Kitura CouchDB 3.0</span>\ndatabase<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>myDocument<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> response <span class=\"token operator\">=</span> response <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Created document with id <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>response<span class=\"token punctuation\">.</span>id<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// Retrieve document here</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"retrieve-a-document\"><a href=\"#retrieve-a-document\" aria-label=\"retrieve a document permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Retrieve a Document</h4>\n<p>When retrieving a document in Kitura CouchDB 2.0, you had to parse the JSON back into your object. In Kitura CouchDB 3.0, you define the type you expect and it will automatically parse the JSON to your type:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// Kitura CouchDB 2.0</span>\ndatabase<span class=\"token punctuation\">.</span><span class=\"token function\">retrieve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Kitura\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> document <span class=\"token operator\">=</span> document<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">let</span> id <span class=\"token operator\">=</span> document<span class=\"token operator\">?</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"_id\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">let</span> rev <span class=\"token operator\">=</span> document<span class=\"token operator\">?</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"_rev\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> document<span class=\"token operator\">?</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> retrievedDoc <span class=\"token operator\">=</span> <span class=\"token function\">MyDocument</span><span class=\"token punctuation\">(</span>_id<span class=\"token punctuation\">:</span> id<span class=\"token punctuation\">,</span> _rev<span class=\"token punctuation\">:</span> rev<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> value<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Document value: <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>retrievedDoc<span class=\"token punctuation\">.</span>value<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// Update document here</span>\n    <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span>\n \n<span class=\"token comment\">// Kitura CouchDB 3.0</span>\ndatabase<span class=\"token punctuation\">.</span><span class=\"token function\">retrieve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Kitura\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">:</span> <span class=\"token builtin\">MyDocument</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">:</span> <span class=\"token builtin\">CouchDBError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">var</span> retrievedDoc <span class=\"token operator\">=</span> document <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Document value: <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>retrievedDoc<span class=\"token punctuation\">.</span>value<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// Update document here</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"update-a-document\"><a href=\"#update-a-document\" aria-label=\"update a document permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update a Document</h4>\n<p>When updating a document in Kitura CouchDB 2.0, you had to convert to and from SwiftyJSON. In Kitura CouchDB 3.0, you can interact and update objects directly:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// Kitura CouchDB 2.0</span>\n<span class=\"token keyword\">let</span> newDoc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"New Value\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">let</span> newJson <span class=\"token operator\">=</span> <span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>newDoc<span class=\"token punctuation\">)</span>\ndatabase<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>retrievedDoc<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">,</span> rev<span class=\"token punctuation\">:</span> retrievedDoc<span class=\"token punctuation\">.</span>_rev<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">:</span> newJson<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>rev<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> rev <span class=\"token operator\">=</span> rev <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Document updated. New rev: <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>rev<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// Delete document here</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n \n<span class=\"token comment\">// Kitura CouchDB 3.0</span>\nretrievedDoc<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"New Value\"</span>\ndatabase<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>retrievedDoc<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">,</span> rev<span class=\"token punctuation\">:</span> retrievedDoc<span class=\"token punctuation\">.</span>_rev<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">:</span> retrievedDoc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> response <span class=\"token operator\">=</span> response <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Document updated. New rev: <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>response<span class=\"token punctuation\">.</span>rev<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// Delete document here</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"delete-a-document\"><a href=\"#delete-a-document\" aria-label=\"delete a document permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Delete a Document</h4>\n<p>Since deleting a document only requires the id and rev strings, this API hasn’t changed between versions.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// Kitura CouchDB 2.0</span>\ndatabase<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>retrievedDoc<span class=\"token punctuation\">.</span>_id<span class=\"token punctuation\">,</span> rev<span class=\"token punctuation\">:</span> rev<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n    <span class=\"token keyword\">if</span> error <span class=\"token operator\">==</span> <span class=\"token constant\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Document successfully deleted\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Kitura CouchDB 3.0</span>\ndatabase<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> rev<span class=\"token punctuation\">:</span> response<span class=\"token punctuation\">.</span>rev<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n    <span class=\"token keyword\">if</span> error <span class=\"token operator\">==</span> <span class=\"token constant\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Document successfully deleted\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"summary\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h3>\n<p>Let’s quickly sum up what we have achieved with the above code examples. We have:</p>\n<ul>\n<li>Connected to a CouchDB database</li>\n<li>Defined our document</li>\n<li>Saved an instance of our document</li>\n<li>Retrieved the saved document</li>\n<li>Updated our document in the database</li>\n<li>Deleted our document</li>\n</ul>\n<p>Even using the most basic model we have saved ourselves twelve lines of code. As documents get more complicated, Kitura-CouchDB 3.0 removes even more boilerplate code, thereby simplifying the code and adding compile time safety.</p>","frontmatter":{"path":"/blogs/kitura-couchdb-cloudant-nosql-database","title":"Kitura CouchDB 3.0: Persisting Codable Swift objects in a CouchDB/Cloudant NoSQL Database","author":"Andrew Lees","date":"2019-02-01"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}